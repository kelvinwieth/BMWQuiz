// <auto-generated />
using BMWQuiz.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BMWQuiz.Infra.Data.Migrations
{
    [DbContext(typeof(BMWQuizDbContext))]
    [Migration("20211015143442_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("BMWQuiz.Domain.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("answer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Inglaterra"
                        },
                        new
                        {
                            Id = 2,
                            Description = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Alemanha"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Japão"
                        });
                });

            modelBuilder.Entity("BMWQuiz.Domain.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Toyota"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mini"
                        },
                        new
                        {
                            Id = 4,
                            Description = "General Motors"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Rolls-Royce"
                        });
                });

            modelBuilder.Entity("BMWQuiz.Domain.Entities.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AnswerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("answer_id");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean")
                        .HasColumnName("is_correct");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("question_id");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("question_option");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerId = 1,
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerId = 2,
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnswerId = 3,
                            IsCorrect = true,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            AnswerId = 4,
                            IsCorrect = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            AnswerId = 1,
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            AnswerId = 2,
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            AnswerId = 3,
                            IsCorrect = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 8,
                            AnswerId = 4,
                            IsCorrect = true,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 9,
                            AnswerId = 1,
                            IsCorrect = true,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            AnswerId = 2,
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 11,
                            AnswerId = 3,
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 12,
                            AnswerId = 4,
                            IsCorrect = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 13,
                            AnswerId = 1,
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 14,
                            AnswerId = 2,
                            IsCorrect = true,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 15,
                            AnswerId = 3,
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 16,
                            AnswerId = 4,
                            IsCorrect = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 17,
                            AnswerId = 1,
                            IsCorrect = true,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 18,
                            AnswerId = 2,
                            IsCorrect = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 19,
                            AnswerId = 3,
                            IsCorrect = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnswerId = 4,
                            IsCorrect = false,
                            QuestionId = 5
                        });
                });

            modelBuilder.Entity("BMWQuiz.Domain.Entities.QuestionOption", b =>
                {
                    b.HasOne("BMWQuiz.Domain.Entities.Answer", "Answer")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BMWQuiz.Domain.Entities.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BMWQuiz.Domain.Entities.Answer", b =>
                {
                    b.Navigation("QuestionOptions");
                });

            modelBuilder.Entity("BMWQuiz.Domain.Entities.Question", b =>
                {
                    b.Navigation("QuestionOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
